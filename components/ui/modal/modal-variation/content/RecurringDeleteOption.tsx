import { useAppSelector } from '../../../../../store/redux';
import { Theme } from '../../../../../models/design-models';
import Button from '../../../buttons/Button';
import classes from '../GeneralModal.module.scss';

interface Props {
    targetName?: string;
    onAction: (deleteGenerated: boolean) => void;
}

const RecurringDeleteOption: React.FC<Props> = (props) => {
    const { targetName, onAction } = props;
    const itemType = useAppSelector((state) => state.recurring.mode).toLowerCase();

    return (
        <>
            <p>
                Do you want to delete existing one-off {itemType}s generated by this recurring{' '}
                {itemType} {targetName && <strong>&quot;{targetName}&quot;</strong>}
                &nbsp;?
            </p>
            <div className={classes.btns}>
                <Button theme={Theme.DANGER} onClick={onAction.bind(null, true)}>
                    Yes
                </Button>
                <Button
                    theme={Theme.SECONDARY}
                    onClick={onAction.bind(null, false)}
                    className={`${classes['btn-cancel']}`}
                >
                    No
                </Button>
            </div>
        </>
    );
};

export default RecurringDeleteOption;
