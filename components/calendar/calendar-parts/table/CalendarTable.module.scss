@import '../../../../styles/abstract/variables';
@import '../../../../styles/abstract/mixins';
@import '../../../../styles/abstract/functions';

$min-cell-width: 8rem;

.grid {
    display: grid;
    // each cell width should always be equal.
    grid-template-columns: repeat(7, minmax(8rem, calc(100% / 7)));
    grid-template-rows: 2.5rem;
    grid-auto-rows: 7rem;
    border-radius: 5px;
    overflow: hidden;
    position: relative;
    background-color: rgba(253, 253, 253, 0.85);

    // Sass for loop to apply media query
    // overflow-x does not apply when max-width: 100%; is set.
    // So, need to set more "tight" max-width for every screen size.
    @for $i from 300 through 1200 {
        @media only screen and (max-width: #{$i}px) {
            overflow-x: scroll;
            max-width: calc(#{$i}px - 30px);
        }
    }

    .cell {
        position: relative;
        min-width: $min-cell-width;
        display: flex;
        flex-direction: column;
        cursor: pointer;
        transition: all 0.25s ease-in-out;
    }

    .day-label {
        border-right: 1px solid $color-primary-dark-2;
        background-color: $color-primary-light-2;
        align-items: center;
        justify-content: center;
    }

    .day-item-wrapper {
        position: relative;
        overflow-x: visible;
        border-right: 1px solid $color-primary;
        border-top: 1px solid $color-primary;
    }

    .day-item {
        height: 100%;
        overflow-y: scroll;
        padding: 0 1px;
        display: flex;
        flex-direction: column;
        gap: 3px;
    }

    // highlight the cell that it is today
    .current-day-item {
        background-color: lighten($color-secondary-light-2, 3.5%);
    }

    .non-current-month-item {
        background-color: rgba($color-grey-light-2, 0.6);
        opacity: 0.85;
    }

    .day-number {
        padding: 0rem 0.3rem;
    }

    .day-item-wrapper:nth-of-type(7n),
    .day-label:nth-of-type(7n) {
        border-right: none;
    }

    .navigator {
        display: none;
        @include respond(900px) {
            display: block;
        }
    }

    .selected-cell {
        transform: scale(1.6);
        background-color: $color-primary-light-1;
        border-radius: 10px;
        border: 1.5px solid $color-primary-light-3 !important;
        z-index: 500;
        padding-top: 5px;
        height: 10rem;
        box-shadow: 0 10px 25px rgba(0, 0, 0, 0.35);

        & * {
            transform: scale(0.9);
        }

        .day-item {
            background-color: inherit;
            @include show-scrollbar;
        }
    }

    .selected-cell-top-leftend {
        transform: scale(1.6) translateX(50%) translateY(20%);
    }

    .selected-cell-top-rightend {
        transform: scale(1.6) translateX(-50%) translateY(20%);
    }

    .selected-cell-bottom-leftend {
        transform: scale(1.6) translateX(50%) translateY(-40%);
    }

    .selected-cell-bottom-rightend {
        transform: scale(1.6) translateX(-50%) translateY(-40%);
    }

    .selected-cell-topend {
        transform: scale(1.6) translateY(20%);
    }

    .selected-cell-bottomend {
        transform: scale(1.6) translateY(-40%);
    }

    .selected-cell-leftend {
        transform: scale(1.6) translate(50%);
    }

    .selected-cell-rightend {
        transform: scale(1.6) translate(-50%);
    }

    .cell:not(.selected-cell) {
        .day-item {
            @include hide-scrollbar;
        }
    }
}

@for $i from 0 through 4 {
    .grid-#{$i} {
        // background-color: violet;
        // For mobile screen, scroll pos can be max 2.
        & .cell {
            position: relative;
            left: calc(-#{$i} * 2 * #{$min-cell-width});
        }

        // For tablet screen, scroll pos can be max 1.
        $left-scroll-pos: min($i, 1);
        @media only screen and (min-width: 650px) {
            .cell {
                left: calc(-#{$left-scroll-pos} * 2 * #{$min-cell-width});
            }
        }

        @media only screen and (min-width: 800px) {
            .cell {
                left: calc(-#{$left-scroll-pos} * #{$min-cell-width});
            }
        }
    }
}
