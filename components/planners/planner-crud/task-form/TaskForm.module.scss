@import "../../../../styles/abstract/variables";

.form {
	display: flex;
	flex-direction: column;
	width: 100%;
	color: $color-primary-dark-3;
	font-size: 1.2rem;
	padding-right: 2px;

	input,
	textarea {
		background-color: #fff;
	}

	.form-content {
		display: flex;
		flex-direction: column;
		padding: 1rem 1.4rem;
		overflow-y: scroll;
		max-height: 570px;
	}

	.section {
		display: flex;
		padding: 1rem .2rem;
		border-bottom: 2.1px solid rgba($color-primary, .7);

		input,
		textarea {
			border: 1.5px solid $color-primary-dark-2;
			padding: 4px 8px;
			&:focus {
				border: 1.5px solid transparent;
			}
		}
	}

	.error {
		color: $color-rose;
	}

	input[aria-invalid = true],
	textarea[aria-invalid = true] {
		border: 1.5px solid $color-rose-dark-1;

		&:focus {
			outline: 2px solid $color-rose-dark-1;
		}
	}

	select {
		width: clamp(10rem, 175px, 80%);
		padding: .4rem 0;
	}

	.name,
	.description,
	.importance,
	.date,
	.time,
	.duration__endtime {
		display: flex;
		flex-direction: column;
		gap: 7px;

		input,
		textarea {
			max-width: 95%;
		}
	}

	.importance,
	.category,
	.datetime,
	.dueDatetime,
	.duration {
		padding-left: 5px;
	}

	.category {
		display: grid;
		grid-template-rows: repeat(2, 1fr);
		grid-template-columns: 50% 1fr;
		grid-row-gap: .7rem;
		grid-column-gap: 1rem;

		padding: 1rem 5px;

		label {
			display: flex;
			align-items: flex-end;
		}

		.select {
			grid-row-start: 2;
			justify-self: start;
		}
	}

	.datetime,
	.dueDatetime {
		.date,
		.time {
			input {
				width: 175px;
			}
		}

		.date {
			width: 50%;
		}

		.time {
			margin-left: 1rem;
		}
	}

	.duration {
		display: flex;

		& > * {
			width: 50%;
		}

		&__input {
			display: grid;
			grid-template-columns: repeat(2, 1fr);
			grid-gap: 7px;
		}

		&__endtime {
			padding-left: 1.1rem;
			padding-top: .3rem;
		}

		&__endtime .date {
			color: $color-secondary-dark-2;
		}

		// Grid element
		&__heading {
			grid-column: 1 / span 2;
		}

		// Grid element
		.number {
			label {
				margin-left: .5rem;
			}

			input {
				max-width: 5rem;
			}
		}

		.error {
			grid-column: 1 / span 2;
		}
	}

	.btns {
		display: flex;
		gap: 1rem;
		padding: 1.3rem 1.9rem;
	}
}
